export interface User {
  id: number;
  email: string;
  name: string;
  role: "user" | "admin" | "seller";
  created_at: string;
  updated_at: string;
  customization_options?: Record<string, string[]>;
}

export interface Product {
  id: number;
  title: string;
  description: string;
  price: number;
  category: string;
  image_url: string;
  stock_quantity: number;
  external_id?: string;
  created_at: string;
  updated_at: string;
  customization_options?: Record<string, string[]>;
}

export interface CartItem {
  id: number;
  user_id: number;
  product_id: number;
  quantity: number;
  created_at: string;
  updated_at: string;
  customization_options?: Record<string, string[]>;
  // Product data returned directly from backend
  title?: string;
  price?: number;
  image_url?: string;
  stock_quantity?: number;
  // Legacy nested product structure (optional)
  product?: Product;
}

export interface Payment {
  id: number;
  order_id: number;
  payment_method: "credit_card" | "debit_card" | "paypal" | "paypay" | "bank_transfer" | "cash_on_delivery";
  payment_status: "pending" | "processing" | "completed" | "failed" | "refunded";
  amount: number;
  transaction_id?: string;
  payment_details?: any;
  created_at: string;
  updated_at: string;
  customization_options?: Record<string, string[]>;
}

export interface PaymentRequest {
  order_id: number;
  payment_method: "credit_card" | "debit_card" | "paypal" | "paypay" | "bank_transfer" | "cash_on_delivery";
  amount: number;
  payment_details?: any;
}

export interface Order {
  id: number;
  user_id: number;
  total_amount: number;
  shipping_address: string;
  status: "pending" | "processing" | "shipped" | "delivered" | "cancelled";
  created_at: string;
  updated_at: string;
  customization_options?: Record<string, string[]>;
  items?: OrderItem[];
}

export interface OrderItem {
  id: number;
  order_id: number;
  product_id: number;
  quantity: number;
  price: number;
  created_at: string;
  updated_at: string;
  customization_options?: Record<string, string[]>;
  product?: Product;
}

export interface Rating {
  id: number;
  user_id: number;
  product_id: number;
  rating: number;
  comment?: string;
  created_at: string;
  updated_at: string;
  customization_options?: Record<string, string[]>;
  user?: User;
  product?: Product;
}

export interface ChatMessage {
  id: number;
  user_id: number;
  message: string;
  is_admin: boolean;
  created_at: string;
  updated_at: string;
  customization_options?: Record<string, string[]>;
  user?: User;
}

export interface CartResponse {
  items: CartItem[];
  total: number;
}

export interface ApiResponse<T> {
  success: boolean;
  data: T;
  message?: string;
}

export interface LoginRequest {
  email: string;
  password: string;
}

export interface LoginResponse {
  user: User;
  token: string;
}

export interface RegisterRequest {
  email: string;
  password: string;
  name: string;
  accountType?: "user" | "admin" | "seller";
}

export interface RegisterResponse {
  user: User;
  token: string;
}

export interface ProductRequest {
  title: string;
  description: string;
  price: number;
  category: string;
  image_url: string;
  stock_quantity: number;
  external_id?: string;
  customization_options?: Record<string, string[]>;
}

export interface ProductResponse {
  product: Product;
}

export interface ProductsResponse {
  products: Product[];
}

export interface CartRequest {
  product_id: number;
  quantity: number;
}

export interface CartUpdateRequest {
  quantity: number;
}

export interface OrderRequest {
  items: CartItem[];
  total_amount: number;
  shipping_address: string;
}

export interface OrderResponse {
  order: Order;
}

export interface OrdersResponse {
  orders: Order[];
}

export interface RatingRequest {
  product_id: number;
  rating: number;
  comment?: string;
}

export interface RatingResponse {
  rating: Rating;
}

export interface RatingsResponse {
  ratings: Rating[];
}

export interface ChatRequest {
  message: string;
}

export interface ChatResponse {
  message: ChatMessage;
}

export interface ChatMessagesResponse {
  messages: ChatMessage[];
}

export interface PaymentResponse {
  payment: Payment;
}

export interface PaymentsResponse {
  payments: Payment[];
}

export interface AdminStats {
  total_users: number;
  total_products: number;
  total_orders: number;
  total_revenue: number;
  recent_orders: Order[];
  top_products: Product[];
}

export interface SellerStats {
  total_products: number;
  total_orders: number;
  total_revenue: number;
  recent_orders: Order[];
  top_products: Product[];
}

export interface UserStats {
  total_orders: number;
  total_spent: number;
  recent_orders: Order[];
  favorite_products: Product[];
}

export interface StripePaymentRequest {
  amount: number;
  currency: string;
  payment_method_id: string;
  order_id: number;
}

export interface StripePaymentResponse {
  client_secret: string;
  payment_intent_id: string;
}

export interface StripeConfigResponse {
  publishable_key: string;
}

export interface WebhookEvent {
  id: string;
  type: string;
  data: any;
  created: number;
}

export interface WebhookResponse {
  received: boolean;
  message?: string;
}
